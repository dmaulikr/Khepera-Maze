{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf350
{\fonttbl\f0\fswiss\fcharset0 Optima-Regular;}
{\colortbl;\red255\green255\blue255;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs26 \cf0 Clear image, Size of the robot, Colours threshold.  \
\
In both the environments we had to recognise the maze, the robot and its movement over time.\
\
% Explain how roundness works. How round is your circle?, http://www.howround.com/\
\
% Find the robot current location. [different methods for real life and simulator, explain why.] \
\
% Find the direction of the robot. What would happen if the robot freeze between frames and how did we solved it. [start driving without the PID controller and pausing for a certain time before taking a new snapshot of the arena.]\
\
% add camera names to the figure.\
\
move drivebot(1) down!\
\
test webot with different camera angles.\
\
add future research section: force the robot to freeze the moment it touches a wall/box. using the approximate  sensors.}